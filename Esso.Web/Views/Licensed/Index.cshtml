@using System.Web.UI.WebControls;
@model int
@using Esso.ViewModels
@using Esso.Data;
@using Esso.Models;
@using Microsoft.AspNet.Identity
@using language
@{
    ViewBag.Title = "ESOFT";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    EssoEntities DB = new EssoEntities();

    #region User yetkileri kontrol
    TBL_STATION stat = new TBL_STATION();
    stat = null;

    var userId = User.Identity.GetUserId();

    int? money;
    var user_money = DB.UserEntity.Where(x => x.USER_ID == userId).FirstOrDefault();

    if (user_money != null)
    {

        money = DB.UserEntity.Where(x => x.USER_ID == userId).Select(x => new { x = x.SHOW_MONEY }).FirstOrDefault().x;
    }
    else
    {
        money = null;
    }


    //User yetkileri kontrol ediliyor
    try
    {

        if (User.IsInRole("M_ADMIN"))
        {
            stat = DB.Stations.Where(a => a.ID == Model).FirstOrDefault();
        }
        else if (User.IsInRole("COMP_ADMIN"))
        {
            int cmpId = DB.Stations.Where(a => a.ID == Model && a.IS_DELETED == false).FirstOrDefault().COMPANY_ID;

            if (DB.CompanyUsers.Any(a => a.COMPANY_ID == cmpId && a.USER_ID == userId && a.IS_DELETED == false))
            {
                stat = DB.Stations.Where(a => a.ID == Model).FirstOrDefault();
            }
        }
        else if (User.IsInRole("COMP_USER"))
        {
            if (DB.StationUsers.Any(a => a.STATION_ID == Model && a.USER_ID == userId && a.IS_DELETED == false))
            {
                stat = DB.Stations.Where(a => a.ID == Model).FirstOrDefault();
            }
        }
        else if (User.IsInRole("DEMO"))
        {
            if (DB.StationUsers.Any(a => a.STATION_ID == Model && a.USER_ID == userId && a.IS_DELETED == false))
            {
                stat = DB.Stations.Where(a => a.ID == Model).FirstOrDefault();
            }
        }

    }
    catch (Exception)
    {

    }
    #endregion

}
@{
    if (stat == null)
    {
        @Html.Partial("_ErrorPagePartial")
    }
    else
    {
        var InverterCount = DB.Inverters.Where(x => x.STATION_ID == Model && x.IS_DELETED == false).Count();
        var _stationDetail = DB.Stations.Where(a => a.ID == Model).FirstOrDefault();
        <style>
            tfoot {
                color: black;
                background: #9c9c9c;
            }
        </style>

        <div class="page-title">
            <div class="title_left">
                @if (User.IsInRole("DEMO"))
                {
                    <h3>@_stationDetail.DEMO_NAME</h3>
                }
                else
                {
                    <h3>@_stationDetail.NAME</h3>
                }
            </div>
        </div>

        @Html.Partial("MenuPartial")


        <input type="hidden" value="@Resources.Daily_Production" id="hdn_daily_production" />
        <input type="hidden" value="EKK Üretilen Enerji" id="hdn_ekk" />
        <input type="hidden" value="@Resources.Energy" id="hdn_energy" />
        <input type="hidden" value="@Resources.Maximum" id="hdn_maximum" />
        <input type="hidden" value="@Resources.Irradiation" id="hdn_irradiation" />
        <input type="hidden" value="@Resources.Production" id="hdn_production" />
        <input type="hidden" value="@Resources.Produced_Energy" id="hdn_production_energy" />
        <input type="hidden" value="Inverter @Resources.Energy_Produced" id="hdn_production" />
        <input type="hidden" value="Ekk_Produced_Energy" id="hdn_production_energy" />
        <input type="hidden" value="@Resources.Target" id="hdn_target" />
        <input type="hidden" value="@Resources.Total" id="hdn_total" />
        <input type="hidden" value="@Resources.January" id="hdn_january" />
        <input type="hidden" value="@Resources.February" id="hdn_february" />
        <input type="hidden" value="@Resources.March" id="hdn_march" />
        <input type="hidden" value="@Resources.April" id="hdn_april" />
        <input type="hidden" value="@Resources.May" id="hdn_may" />
        <input type="hidden" value="@Resources.June" id="hdn_june" />
        <input type="hidden" value="@Resources.July" id="hdn_july" />
        <input type="hidden" value="@Resources.August" id="hdn_august" />
        <input type="hidden" value="@Resources.September" id="hdn_september" />
        <input type="hidden" value="@Resources.October" id="hdn_october" />
        <input type="hidden" value="@Resources.November" id="hdn_november" />
        <input type="hidden" value="@Resources.December" id="hdn_december" />

        <input type="hidden" value="@Resources.Monday" id="hdn_monday" />
        <input type="hidden" value="@Resources.Tuesday" id="hdn_tuesday" />
        <input type="hidden" value="@Resources.Wednesday" id="hdn_wednesday" />
        <input type="hidden" value="@Resources.Thursday" id="hdn_thursday" />
        <input type="hidden" value="@Resources.Friday" id="hdn_friday" />
        <input type="hidden" value="@Resources.Saturday" id="hdn_saturday" />
        <input type="hidden" value="@Resources.Sunday" id="hdn_sunday" />

        <div class="clearfix"></div>

        <div id="DivMeteorology">
            <div class="animated col-md-2 col-sm-4 col-xs-6 tile_stats_count">
                <div class="tile-stats" style="background: #f7f7f7">
                    <span class="count_top">
                        <img src="~/images/solarpanel.png" />@Resources.Irradiation
                    </span>
                    <div style="font-size:20px" id="irradiation" class="count">- W/m²</div>
                </div>
            </div>
            <div class="animated col-md-2 col-sm-4 col-xs-6 tile_stats_count">
                <div class="tile-stats" style="background: #f7f7f7">
                    <span class="count_top">
                        <img src="~/images/wind.png" />@Resources.Wind_Speed
                    </span>
                    <div style="font-size:20px" id="wind" class="count">- m/s</div>
                </div>
            </div>
            <div class="animated col-md-2 col-sm-4 col-xs-6 tile_stats_count">
                <div class="tile-stats" style="background: #f7f7f7">
                    <span class="count_top">
                        <img src="~/images/temp.png" />@Resources.Cell_Temp
                    </span>
                    <div style="font-size:20px" id="cell" class="count">- °C</div>
                </div>
            </div>
            <div class="animated col-md-2 col-sm-4 col-xs-6 tile_stats_count">
                <div class="tile-stats" style="background: #f7f7f7">
                    <span class="count_top">
                        <img src="~/images/outTemp.png" />@Resources.External_Temp
                    </span>
                    <div style="font-size:20px" id="external" class="count green">- °C</div>
                </div>
            </div>
        </div>
        <div class="col-md-2 col-sm-4 col-xs-6" id="EkkDiv">
            <h4>Inverter AC @Resources.Power</h4>
            <canvas width="150" height="80" id="foo" class=""></canvas>
            <div class="goal-wrapper">
                <span id="gauge-text" class="gauge-value pull-left" style="font-size:11px">0</span>
                <span class="gauge-value pull-left" style="font-size:11px"> kW</span>
                <span id="goal-text" class="goal-value pull-right" style="font-size:11px">Max:1000 kW</span>
            </div>
        </div>
                <div class="col-md-2 col-sm-4 col-xs-6" id="EkkDiv2">
                    <h4>EA AC @Resources.Power</h4>
                    <canvas width="150" height="80" id="foo2" class=""></canvas>
                    <div class="goal-wrapper">
                        <span id="gauge-text2" class="gauge-value pull-left" style="font-size:11px">0</span>
                        <span class="gauge-value pull-left" style="font-size:11px"> kW</span>
                        <span id="goal-text2" class="goal-value pull-right" style="font-size:11px">Max:1000 kW</span>
                    </div>
                </div>
        <!-- top tiles -->
                <div class="row tile_count">
                    <div class="animated flipInY col-md-3 col-sm-4 col-xs-6 tile_stats_count">
                        <span class="count_top">
                            <img src="~/images/solarpanel.png" />@Resources.Daily_Production
                        </span>
                        <div id="gunlukEnerji" class="count">- MWh</div>
                    </div>
                    <div class="animated flipInY col-md-3 col-sm-4 col-xs-6 tile_stats_count">
                        <span class="count_top">
                            <img src="~/images/solarpanel.png" />@Resources.Monthly_Production
                        </span>
                        <div id="aylikEnerji" class="count">- MWh</div>
                    </div>
                    <div class="animated flipInY col-md-3 col-sm-4 col-xs-6 tile_stats_count">
                        <span class="count_top">
                            <img src="~/images/solarpanel.png" />@Resources.Annual_Production
                        </span>
                        <div id="yillikEnerji" class="count">- MWh</div>
                    </div>
                    <div class="animated flipInY col-md-3 col-sm-4 col-xs-6 tile_stats_count">
                        <span class="count_top">
                            <img src="~/images/solarpanel.png" />@Resources.Total_Production
                        </span>
                        <div id="toplamEnerji" class="count green">- MWh</div>
                    </div>
                </div>
                <div class="row tile_count">
                    @if (money == null)
                    {
                        <div class="animated flipInY col-md-3 col-sm-4 col-xs-6 tile_stats_count">
                            <span class="count_top"><img src="~/images/money.png" />@Resources.Daily_Financial_Income</span>
                            <div id="gunlukGelir" class="count">$</div>
                        </div>
                        <div class="animated flipInY col-md-3 col-sm-4 col-xs-6 tile_stats_count">
                            <span class="count_top"><img src="~/images/money.png" />@Resources.Monthly_Financial_Income</span>
                            <div id="aylikGelir" class="count">$</div>
                        </div>
                        <div class="animated flipInY col-md-3 col-sm-4 col-xs-6 tile_stats_count">
                            <span class="count_top"><img src="~/images/money.png" />@Resources.Annual_Financial_Income</span>
                            <div id="yillikGelir" class="count">$</div>
                        </div>
                        <div class="animated flipInY col-md-3 col-sm-4 col-xs-6 tile_stats_count">
                            <span class="count_top"><img src="~/images/money.png" />@Resources.Total_Financial_Income</span>
                            <div id="toplamGelir" class="count green">$</div>
                        </div>

                    }
                </div>
        <!-- /top tiles -->
                <div class="row tile_count">
                    @if (money == null)
                    {
                        <div class="animated flipInY col-md-3 col-sm-4 col-xs-6 tile_stats_count">
                            <span class="count_top"><img src="~/images/money.png" />@Resources.Daily_Tax</span>
                            <div id="dailyTax" class="count">$</div>
                        </div>
                        <div class="animated flipInY col-md-3 col-sm-4 col-xs-6 tile_stats_count">
                            <span class="count_top"><img src="~/images/money.png" />@Resources.Monthly_Tax</span>
                            <div id="monthlyTax" class="count">$</div>
                        </div>
                        <div class="animated flipInY col-md-3 col-sm-4 col-xs-6 tile_stats_count">
                            <span class="count_top"><img src="~/images/money.png" />@Resources.Annual_Tax</span>
                            <div id="annualTax" class="count">$</div>
                        </div>
                        <div class="animated flipInY col-md-3 col-sm-4 col-xs-6 tile_stats_count">
                            <span class="count_top"><img src="~/images/money.png" />@Resources.Total_Tax</span>
                            <div id="totalTax" class="count green">$</div>
                        </div>
                    }
                </div>

                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="x_panel">
                            <div class="x_title">
                                <h2>@Resources.Production</h2>
                                <div class="clearfix"></div>
                            </div>
                            <div class="x_content">
                                <div id="echart_line" style="height:500px;"></div>
                                <div class="well" style="overflow: auto">
                                    <div class="col-md-6">
                                        <div class="btn-group">
                                            <h4 id="bakisTarih"></h4>
                                        </div>
                                        <div class="btn-group">
                                            <input name="beginDaily" id="single_cal4" class="form-control has-feedback-left" type="text" />
                                        </div>
                                        <div class="btn-group">
                                            <input type="button" class="btn btn-info" id="btnListDaily" value="@Resources.Show" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="btn-group">
                                            <button style="padding: 8px 22px;" id="btnHourlyAVG" type="button" class="btn btn-info btn-sm" data-toggle="modal" data-target="#HourlyAVGModal">@Resources.Hourly_Production @Resources.Graphic</button>
                                        </div>
                                        <div class="btn-group">
                                            <button style="padding: 8px 22px;" id="btnSaatlikDetay" type="button" class="btn btn-info btn-sm" data-toggle="modal" data-target="#HourlyModal">@Resources.Hourly_Production</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="x_panel">
                                    <div class="x_content">
                                        <div class="table-responsive">
                                            <table class="table table-striped jambo_table bulk_action" style=" background-color: rgba(111, 126, 141, 0.05);">
                                                <thead>
                                                    <tr>
                                                        <th colspan="2">@Resources.Instant</th>
                                                        <th colspan="2"></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr>
                                                        <td>@Resources.Daily_Production :</td>
                                                        <td id="Pac"></td>
                                                        <td>@Resources.Yield :</td>
                                                        <td id="yield"></td>
                                                    </tr>
                                                    <tr>
                                                        <td>@Resources.Generator_Power Pdc:</td>
                                                        <td id="Pdc"></td>
                                                        <td>@Resources.Specific_Yield :</td>
                                                        <td id="specificYield"></td>
                                                    </tr>
                                                    <tr>
                                                        <td>@Resources.Inverter_Efficiency η:</td>
                                                        <td id="Efficiency"></td>
                                                        <td>@Resources.Actual_Value:</td>
                                                        <td id="ActualValue"></td>
                                                    </tr>
                                                    <tr>
                                                        <td>@Resources.Status :</td>
                                                        <td>@InverterCount Inverter</td>
                                                        <td>
                                                            CO₂ @Resources.emissions_avoided_in_total :
                                                            <select id="selectedCo2" name="selectedTag" class="btn btn-dark btn-sm">
                                                                <option value="0">@Resources.lignite</option>
                                                                <option value="1">@Resources.Coal</option>
                                                                <option value="2">@Resources.Natural_Gas</option>
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <b id="Co2"></b>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <br />
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="x_panel">
                            <div class="x_content">
                                <div class="" role="tabpanel" data-example-id="togglable-tabs">
                                    <ul id="myTab1" class="nav nav-tabs bar_tabs" role="tablist">
                                        <li role="presentation" class="active">
                                            <a href="#tab_content11" id="home-tabb" role="tab" data-toggle="tab" aria-controls="home" aria-expanded="true">@Resources.Daily</a>
                                        </li>
                                        <li role="presentation" id="profile-tab24" class="">
                                            <a href="#tab_content55" role="tab" id="profile-tab3" data-toggle="tab" aria-expanded="false">@Resources.Weekly</a>
                                        </li>
                                        <li role="presentation" id="profile-tab21" class="">
                                            <a href="#tab_content22" role="tab" id="profile-tabb" data-toggle="tab" aria-controls="profile" aria-expanded="false">@Resources.Monthly</a>
                                        </li>
                                        <li role="presentation" id="profile-tab22" class="">
                                            <a href="#tab_content33" role="tab" id="profile-tab2" data-toggle="tab" aria-expanded="false">@Resources.Annual</a>
                                        </li>
                                        <li role="presentation" id="profile-tab23" class="">
                                            <a href="#tab_content44" role="tab" id="profile-tab3" data-toggle="tab" aria-expanded="false">@Resources.Total</a>
                                        </li>
                                    </ul>
                                    <div id="myTabContent2" class="tab-content">
                                        <div role="tabpanel" class="tab-pane fade active in" id="tab_content11" aria-labelledby="home-tab">
                                            <div class="x_panel">
                                                <div class="x_title">
                                                    <h2>@Resources.Daily_Production</h2>
                                                    <div class="clearfix"></div>
                                                </div>
                                                <div class="x_content">
                                                    <div id="mainb" style="height:350px;"></div>
                                                    <div class="well" style="overflow: auto">
                                                        <div class="col-md-12">
                                                            <div class="btn-group">
                                                                <select id="selectedMonth" name="selectedMonth" class="form-control">
                                                                    <option value="">-</option>
                                                                    <option value="1">@Resources.January</option>
                                                                    <option value="2">@Resources.February</option>
                                                                    <option value="3">@Resources.March</option>
                                                                    <option value="4">@Resources.April</option>
                                                                    <option value="5">@Resources.May</option>
                                                                    <option value="6">@Resources.June</option>
                                                                    <option value="7">@Resources.July</option>
                                                                    <option value="8">@Resources.August</option>
                                                                    <option value="9">@Resources.September</option>
                                                                    <option value="10">@Resources.October</option>
                                                                    <option value="11">@Resources.November</option>
                                                                    <option value="12">@Resources.December</option>
                                                                </select>
                                                            </div>
                                                            <div class="btn-group">
                                                                <select id="selectedYear" name="selectedYear" class="form-control">
                                                                    <option value="2019">2019</option>
                                                                    <option value="2018">2018</option>
                                                                    <option value="2017">2017</option>
                                                                </select>
                                                            </div>
                                                            <div class="btn-group">
                                                                <input type="button" class="btn btn-info" id="btnList2" value="@Resources.Show" />
                                                            </div>
                                                            <div class="btn-group">
                                                                <button style="padding: 8px 22px;" id="btnAylikDetay" type="button" class="btn btn-info btn-sm" data-toggle="modal" data-target="#AylikModal">@Resources.List</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div role="tabpanel" class="tab-pane fade" id="tab_content55" aria-labelledby="profile-tab">
                                            <div class="x_panel">
                                                <div class="x_title">
                                                    <h2>@Resources.Weekly_Production</h2>
                                                    <div class="clearfix"></div>
                                                </div>
                                                <div class="x_content">
                                                    <div id="mainb5" style="height:350px;"></div>
                                                    <div class="well" style="overflow: auto">
                                                        <img id="LoadingImage3" src="~/images/loader.gif" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div role="tabpanel" class="tab-pane fade" id="tab_content22" aria-labelledby="profile-tab">
                                            <div class="x_panel">
                                                <div class="x_title">
                                                    <h2>@Resources.Monthly_Production</h2>
                                                    <div class="clearfix"></div>
                                                </div>
                                                <div class="x_content">
                                                    <div id="mainb2" style="height:350px;"></div>
                                                    <div class="well" style="overflow: auto">
                                                        <div class="col-md-12">
                                                            <div class="btn-group">
                                                                <select id="selected2Year" name="selected2Year" class="form-control">
                                                                    <option value="2019">2019</option>
                                                                    <option value="2018">2018</option>
                                                                    <option value="2017">2017</option>
                                                                </select>
                                                            </div>
                                                            <div class="btn-group">
                                                                <input type="button" class="btn btn-info" id="btnList3" value="@Resources.Show" />
                                                            </div>
                                                            <div class="btn-group">
                                                                <button style="padding: 8px 22px;" id="btnYillikDetay" type="button" class="btn btn-info btn-sm" data-toggle="modal" data-target="#YillikModal">@Resources.List</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div role="tabpanel" class="tab-pane fade" id="tab_content33" aria-labelledby="profile-tab">
                                            <div class="x_panel">
                                                <div class="x_title">
                                                    <h2>@Resources.Annual_Production</h2>
                                                    <div class="clearfix"></div>
                                                </div>
                                                <div class="x_content">
                                                    <div id="mainb3" style="height:350px;"></div>
                                                    <div class="well" style="overflow: auto"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div role="tabpanel" class="tab-pane fade" id="tab_content44" aria-labelledby="profile-tab">
                                            <div class="x_panel">
                                                <div class="x_title">
                                                    <h2>@Resources.Total_Production</h2>
                                                    <div class="clearfix"></div>
                                                </div>
                                                <div class="x_content">
                                                    <div id="mainb4" style="height:350px;"></div>
                                                    <div class="well" style="overflow: auto"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div id="HourlyModal" class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-hidden="true">
                        <div class="modal-dialog modal-lg">
                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-body">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">×</span>
                                        </button>
                                        <h4 class="modal-title" id="Label2">
                                            @Resources.Hourly_Production
                                        </h4>
                                    </div>

                                    @Resources.Start_Date <input name="inpHour" id="inpHour" type="text" />&nbsp;&nbsp;
                                    @Resources.Date <input name="inpHour2" id="inpHour2" type="text" />&nbsp;&nbsp;

                                    <input type="button" class="btn btn-info" id="btnHourList" value="@Resources.Show" />
                                    <button onclick="location.href = '@Url.Action("ExceleAktarHourlyEnergyData", "Home")'" class="btn btn-primary pull-right" style="margin-right: 5px;"><i class="fa fa-download"></i>@Resources.Download_As_Excel</button>
                                    <table id="datatable" class="table table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <th>@Resources.Hour</th>
                                                <th>Inverter @Resources.Energy_Produced @Resources.Cumulative</th>
                                                <th>Inverter @Resources.Energy_Produced</th>
                                                <th>EKK @Resources.Energy_Produced</th>
                                                <th>@Resources.Irradiation Enerjisi</th>
                                            </tr>
                                        </thead>
                                        <tbody id="saatlikDetay"></tbody>
                                    </table>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="HourlyAVGModal" class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-hidden="true">
                        <div class="modal-dialog modal-lg">
                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-body">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">×</span>
                                        </button>
                                        <h4 class="modal-title" id="myModalLabel2">@Resources.Hourly_Production_Average</h4>
                                    </div>
                                    <div id="mainb6" style="height:350px;"></div>
                                    <div class="well" style="overflow: auto">
                                        <div class="col-md-12">
                                            <div class="btn-group">
                                                <input name="HourlyAvgDate" id="single_cal5" class="form-control has-feedback-left" type="text" />
                                            </div>
                                            <div class="btn-group">
                                                <input name="HourlyAvgDate2" id="single_cal6" class="form-control has-feedback-left" type="text" />
                                            </div>
                                            <div class="btn-group">
                                                <input type="button" class="btn btn-info" id="btnListHourly" value="@Resources.Show" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="AylikModal" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-body">
                                    <div class="x_title">
                                        <h2>@Resources.Daily_Production</h2>
                                        <button onclick="location.href = '@Url.Action("ExcelAsDownload", "Home")'" class="btn btn-primary pull-right" style="margin-right: 5px;"><i class="fa fa-download"></i> @Resources.Download_As_Excel</button>
                                        <div class="clearfix"></div>
                                    </div>
                                    <table id="datatable" class="table table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <th>@Resources.Date</th>
                                                <th>@Resources.Energy_Produced</th>
                                                <th>@Resources.Irradiation</th>
                                                <th>@Resources.Performance_Ratio</th>
                                            </tr>
                                        </thead>
                                        <tfoot id="aylikFooter"></tfoot>
                                        <tbody id="aylikDetay"></tbody>
                                    </table>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="YillikModal" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-body">
                                    <div class="x_title">
                                        <h2>@Resources.Monthly_Production</h2>
                                        <button onclick="location.href = '@Url.Action("AnnualyExcelAsDownload", "Home")'" class="btn btn-primary pull-right" style="margin-right: 5px;"><i class="fa fa-download"></i> @Resources.Download_As_Excel</button>
                                        <div class="clearfix"></div>
                                    </div>
                                    <table id="datatable" class="table table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <th>@Resources.Month</th>
                                                <th>@Resources.Energy_Produced</th>
                                                <th>@Resources.Irradiation</th>
                                                <th>PR</th>
                                                <th>@Resources.Target</th>
                                            </tr>
                                        </thead>
                                        <tfoot id="yillikFooter"></tfoot>
                                        <tbody id="yillikDetay"></tbody>
                                    </table>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <script src="~/js/gauge.min.js"></script>
                <script src="~/Content/raphael.min.js"></script>
                <script src="~/Content/morris.min.js"></script>

                <script>

                    function NumberConvert(nStr) {
                        if (nStr != null) {
                            nStr = nStr.toFixed(2);
                            nStr += '';
                            x = nStr.split('.');
                            x1 = x[0];
                            x2 = x.length > 1 ? ',' + x[1] : '';
                            var rgx = /(\d+)(\d{3})/;
                            while (rgx.test(x1)) {
                                x1 = x1.replace(rgx, '$1' + '.' + '$2');
                            }
                            return x1 + x2;
                        }
                        else {
                            return "-";
                        }
                    }
                    function NumberConvert2(nStr) {
                        if (nStr != null) {
                            nStr += '';
                            x = nStr.split('.');
                            x1 = x[0];
                            x2 = x.length > 1 ? ',' + x[1] : '';
                            var rgx = /(\d+)(\d{3})/;
                            while (rgx.test(x1)) {
                                x1 = x1.replace(rgx, '$1' + '.' + '$2');
                            }
                            return x1 + x2;
                        }
                        else {
                            return "-";
                        }
                    }
                    function ConvertDay(vl) {
                        var value = new Date
                            (
                            parseInt(vl.replace(/(^.*\()|([+-].*$)/g, ''))
                            );
                        return value.getDate()
                    }

                    function ConvertDateMonth(vl) {
                        var value = new Date
                            (
                            parseInt(vl.replace(/(^.*\()|([+-].*$)/g, ''))
                            );
                        var ay = (value.getMonth() + 1);
                        if (ay == 1) { sonuc = 31; }
                        else if (ay == 2) { sonuc = 28; }
                        else if (ay == 3) { sonuc = 31; }
                        else if (ay == 4) { sonuc = 30; }
                        else if (ay == 5) { sonuc = 31; }
                        else if (ay == 6) { sonuc = 30; }
                        else if (ay == 7) { sonuc = 31; }
                        else if (ay == 8) { sonuc = 31; }
                        else if (ay == 9) { sonuc = 30; }
                        else if (ay == 10) { sonuc = 31; }
                        else if (ay == 11) { sonuc = 30; }
                        else if (ay == 12) { sonuc = 31; }
                        return sonuc;
                    }
                    function ConvertNumberMonth(vln) {

                        if (vln == 1) { sonuc2 = 31; }
                        else if (vln == 2) { sonuc2 = 28; }
                        else if (vln == 3) { sonuc2 = 31; }
                        else if (vln == 4) { sonuc2 = 30; }
                        else if (vln == 5) { sonuc2 = 31; }
                        else if (vln == 6) { sonuc2 = 30; }
                        else if (vln == 7) { sonuc2 = 31; }
                        else if (vln == 8) { sonuc2 = 31; }
                        else if (vln == 9) { sonuc2 = 30; }
                        else if (vln == 10) { sonuc2 = 31; }
                        else if (vln == 11) { sonuc2 = 30; }
                        else if (vln == 12) { sonuc2 = 31; }
                        return sonuc2;
                    }


                    function ConvertTicksToTime(vl) {
                        vl = vl.replace("Date", "");
                        vl = vl.replace("/", "");
                        vl = vl.replace("(", "");
                        vl = vl.replace(")", "");
                        vl = vl.replace("/", "").trim();

                        var vlDate = new Date(parseInt(vl));
                        return vlDate.toLocaleTimeString();
                    }

                    function formatDate(vl) {
                        var value = new Date
                            (
                            parseInt(vl.replace(/(^.*\()|([+-].*$)/g, ''))
                            );
                        var dat = value.getDate() +
                            "/" +
                            (value.getMonth() + 1) +
                            "/" +
                            value.getFullYear();

                        var time = value.getDate().toString();
                        return dat.toString();
                    }

                    function DateFormat2(vl) {
                        var value = new Date
                            (
                            parseInt(vl.replace(/(^.*\()|([+-].*$)/g, ''))
                            );
                        var dat = value.getDate() +
                            "/" +
                            (value.getMonth() + 1) +
                            "/" +
                            value.getFullYear();

                        var time = value.getHours() +
                            ":" +
                            value.getMinutes() + "0"
                        return time.toString();
                    }
                    function DateFormat3(vl) {


                        var value = new Date
                            (
                            parseInt(vl.replace(/(^.*\()|([+-].*$)/g, ''))
                            );
                        var dat = value.getDate() +
                            "/" +
                            (value.getMonth() + 1) +
                            "/" +
                            value.getFullYear();

                        var time = (value.getHours() + 1)
                        ":" +
                            value.getMinutes() + "0";
                        var time2 = time + ":" + value.getMinutes() + "0";

                        return time2.toString();
                    }
                    function ConvertTicksToDate(vl) {
                        vl = vl.replace("Date", "");
                        vl = vl.replace("/", "");
                        vl = vl.replace("(", "");
                        vl = vl.replace(")", "");
                        vl = vl.replace("/", "").trim();

                        var vlDate = new Date(parseInt(vl));
                        return vlDate.toLocaleDateString();
                    }
            //DailyChartData();
                </script>
                <script>

                var theme = {
                     //renkler
                    color: [
                        '#23e600', '#052ec7', '#fea80c', '#d400a5',
                        '#9B59B6', '#8abb6f', '#759c6a', '#bfd3b7'
                    ],


                    title: {
                        itemGap: 8,
                        textStyle: {
                            fontWeight: 'normal',
                            color: '#408829'
                        }
                    },

                    dataRange: {
                        color: ['#1f610a', '#97b58d']
                    },

                    toolbox: {
                        color: ['#408829', '#408829', '#408829', '#408829']
                    },

                    tooltip: {
                        backgroundColor: 'rgba(0,0,0,0.5)',
                        axisPointer: {
                            type: 'line',
                            lineStyle: {
                                color: '#408829',
                                type: 'dashed'
                            },
                            crossStyle: {
                                color: '#408829'
                            },
                            shadowStyle: {
                                color: 'rgba(200,200,200,0.3)'
                            }
                        }
                    },

                    dataZoom: {
                        dataBackgroundColor: '#eee',
                        fillerColor: 'rgba(64,136,41,0.2)',
                        handleColor: '#408829'
                    },
                    grid: {
                        borderWidth: 0
                    },

                    categoryAxis: {
                        axisLine: {
                            lineStyle: {
                                color: '#408829'
                            }
                        },
                        splitLine: {
                            lineStyle: {
                                color: ['#eee']
                            }
                        }
                    },

                    valueAxis: {
                        axisLine: {
                            lineStyle: {
                                color: '#408829'
                            }
                        },
                        splitArea: {
                            show: true,
                            areaStyle: {
                                color: ['rgba(250,250,250,0.1)', 'rgba(200,200,200,0.1)']
                            }
                        },
                        splitLine: {
                            lineStyle: {
                                color: ['#eee']
                            }
                        }
                    },
                    timeline: {
                        lineStyle: {
                            color: '#408829'
                        },
                        controlStyle: {
                            normal: { color: '#408829' },
                            emphasis: { color: '#408829' }
                        }
                    },


                    textStyle: {

                        fontFamily: 'Arial, Verdana, sans-serif'

                    }
            };

            $(document).ready(function () {

                //Saatlik Üretim bas.
                $('#btnSaatlikDetay').click(function () {
                    //debugger;
                    //$('#inpHour').daterangepicker({
                    //    singleDatePicker: true, locale: {
                    //        format: 'DD/MM/YYYY',
                    //        startDate: moment()
                    //    },
                    //    singleClasses: "picker_4"
                    //}, function (start, end, label) {
                    //    console.log(start.toISOString(), end.toISOString(), label);

                    //});

                    //$('#inpHour2').daterangepicker({
                    //    singleDatePicker: true, locale: {
                    //        format: 'DD/MM/YYYY',
                    //        startDate: moment()
                    //    },
                    //    singleClasses: "picker_4"
                    //}, function (start, end, label) {
                    //    debugger;
                    //    console.log(start.toISOString(), end.toISOString(), label);
                    //    });



                    $('#inpHour').daterangepicker({
                        singleDatePicker: true,
                        showDropdowns: true,
                        startDate: moment().add(0, 'day'),
                        //minDate: moment(),
                        locale: {
                            format: 'DD/MM/YYYY'
                        }
                    });

                    $('#inpHour2').daterangepicker({
                        singleDatePicker: true,
                        showDropdowns: true,
                        startDate: moment().add(0, 'day'),
                        //minDate: moment(),
                        locale: {
                            format: 'DD/MM/YYYY'
                        }
                    });



                    GetHourProduction();
                });
                $('#btnHourList').click(function () {
                    GetHourProduction();
                });

                function GetHourProduction() {
                    $("#saatlikDetay").empty();
                    var selectDate = $('input[name="inpHour"]').val();
                    var endDate = $('input[name="inpHour2"]').val();


                    //$(endDate).datepicker('setDate', null);
                    if (!selectDate || selectDate.length == 0) {
                        selectDate = new Date().toISOString();
                    }
                    if (!endDate || endDate.length == 0) {
                        endDate = new Date().toISOString();
                    }

                    $.ajax({
                        url: "/Home/HourlyReport/",
                        type: "POST",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: "{'slctDate':'" + selectDate + "','endDate':'" + endDate + "','stationId':'" +@Model+ "'}",
                        success: function (data) {
                            debugger;
                            // var isinimToplam = 0;
                            var gecici = 0;
                            var gecici2 = 0;
                            $.each(data, function (i, item) {
                                $("#saatlikDetay").append("<tr><td>" + formatDate(item._tarih) + "--" + DateFormat2(item._tarih) + " - " + DateFormat3(item._tarih) + "</td><td>" + item._enerjiArtan + " MWh" + "</td><td>" + item._enerji + " MWh" + "</td><td>" + item._uretilen_enerji + " MWh" + "</td><td>" + item._isinimToplam + " Wh/m²" + "</td></tr>")
                                gecici = item._enerji;
                                gecici2 = item._enerji;
                            })
                        }
                    });
                }
                //Saatlik Üretim bit.

                function EndData() {
                    $('#EkkDiv').hide();
                    $('#EkkDiv2').hide();
                    $('#DivMeteorology').hide();

                    $.ajax({
                        url: "/Home/ProductionInf?stationId=@Model",
                        type: "POST",
                        dataType: "json",
                        success: function (data) {

                            if (data.isMeteorology) {
                                $('#DivMeteorology').show();
                            }
                            $('#EkkDiv').show();
                            if (data.isEKK) {
                                $('#EkkDiv2').show();
                                //Gauge2 Chart bas.
                                if (data.H2_P <= 0) {
                                    var opts2 = {
                                        lines: 12,
                                        angle: 0,
                                        lineWidth: 0.4,
                                        pointer: {
                                            length: 0.75,
                                            strokeWidth: 0.042,
                                            color: '#ff0000'
                                        },
                                        limitMax: 'true',
                                        colorStart: '#1abb9c',
                                        colorStop: '#1abb9c',
                                        strokeColor: '#F0F3F3',
                                        generateGradient: true
                                    };
                                }
                                else {
                                    var opts2 = {
                                        lines: 12,
                                        angle: 0,
                                        lineWidth: 0.4,
                                        pointer: {
                                            length: 0.75,
                                            strokeWidth: 0.042,
                                            color: '#1D212A'
                                        },
                                        limitMax: 'true',
                                        colorStart: '#e74c3c',
                                        colorStop: '#e74c3c',
                                        strokeColor: '#F0F3F3',
                                        generateGradient: true
                                    };
                                }


                                var target2 = document.getElementById('foo2'),
                                    gauge2 = new Gauge(target2).setOptions(opts2);

                                gauge2.maxValue = data.insAC * 1.20;

                                gauge2.animationSpeed = 32;
                                if (data.H2_P == 0) {
                                    gauge2.set(Math.abs(1));
                                    gauge2.setTextField(0);
                                }
                                else {
                                    gauge2.set(Math.abs(data.H2_P));
                                    gauge2.setTextField(document.getElementById("gauge-text2"));
                                }


                                $('#goal-text2').text(data.insAC * 1.20 + " kW");



                                //Gauge2 Chart bit.
                            }
                            //Gauge1 Chart bas.
                            var opts = {
                                lines: 12,
                                angle: 0,
                                lineWidth: 0.4,
                                pointer: {
                                    length: 0.75,
                                    strokeWidth: 0.042,
                                    color: '#1D212A'
                                },
                                limitMax: 'true',
                                colorStart: '#1abb9c',
                                colorStop: '#1abb9c',
                                strokeColor: '#F0F3F3',
                                generateGradient: true
                            };



                            var target = document.getElementById('foo'),
                                gauge = new Gauge(target).setOptions(opts);



                            gauge.maxValue = data.insAC * 1.20;
                            gauge.animationSpeed = 50;



                            if (data._pac == 0) {
                                gauge.set(1);
                                gauge.setTextField(0);
                            }
                            else {

                                gauge.set(data._pac);
                                gauge.setTextField(document.getElementById("gauge-text"));
                            }


                            ////$('#goal-text').text(data.insAC*1.20 + " kW");
                            //debugger;
                            $('#goal-text').text(data.insAC * 1.20 + " kW");

                            //Gauge1 Chart bit.

                            //gunluk
                            $("#gunlukEnerji").html(NumberConvert(data._dailyProduction) + " MWh");
                            $("#gunlukGelir").html(NumberConvert(data._dailyIncome) + " $");
                            $("#yield").html(NumberConvert(data._dailyProduction) + ' MWh');
                            //
                            $("#specificYield").html(NumberConvert(data._specificYield) + ' kWh/kWp');
                            $("#ActualValue").html(NumberConvert(data._actualValue) + ' %');
                            //aylik
                            $("#aylikEnerji").html(NumberConvert(data._monthlyProduction) + " MWh");
                            $("#aylikGelir").html(NumberConvert(data._monthlyIncome) + " $");

                            //yıllık
                            $("#yillikEnerji").html(NumberConvert(data._annualProduction) + " MWh");
                            $("#yillikGelir").html(NumberConvert(data._annualIncome) + " $");
                            //toplam
                            $("#toplamEnerji").html(NumberConvert(data._totalProduction) + " MWh");
                            $("#toplamGelir").html(NumberConvert(data._totalIncome) + " $");
                            $("#Co2").html(NumberConvert(data._totalProduction / 1000 * 1054) + ' t');
                            $('#selectedCo2').on('change', function () {
                                var ss = $('#selectedCo2').val();

                                if (ss == 0) {
                                    $("#Co2").html(NumberConvert(data._totalProduction / 1000 * 1054) + ' t');
                                }
                                else if (ss == 1) {
                                    $("#Co2").html(NumberConvert(data._totalProduction / 1000 * 888) + ' t');
                                }
                                else if (ss == 2) {
                                    $("#Co2").html(NumberConvert(data._totalProduction / 1000 * 499) + ' t');
                                }

                            });
                            //Meteoroloji
                            $("#irradiation").html(NumberConvert(data._isinim));
                            $("#wind").html(NumberConvert(data._ruzgar));
                            $("#cell").html(NumberConvert(data._hucreSicakligi));
                            $("#external").html(NumberConvert(data._ortamSicakligi));
                            //Güç
                            $("#Pac").html(NumberConvert(data._pac) + " kW");
                            $("#Pdc").html(NumberConvert(data._pdc) + " kW");
                            var efficiency = data._pac / data._pdc;
                            $("#Efficiency").html(NumberConvert(efficiency * 100) + " %");

                            //TAX
                            $("#dailyTax").html(NumberConvert(data._dailyTax) + " ₺");
                            $("#monthlyTax").html(NumberConvert(data._monthlTax) + " ₺");
                            $("#annualTax").html(NumberConvert(data._annualTax) + " ₺");
                            $("#totalTax").html(NumberConvert(data._totalTax) + " ₺");
                            DailyChartData();

                        }
                    });
                }
                EndData();

                var timer, delay = 300000;
                timer = setInterval(function () {
                    EndData();
                }, delay);

                //Üretim Grafik bas

                function DateFormat(vl) {

                    var value = new Date
                        (
                        parseInt(vl.replace(/(^.*\()|([+-].*$)/g, ''))
                        );
                    var dat = value.getDate() +
                        "/" +
                        (value.getMonth() + 1) +
                        "/" +
                        value.getFullYear();

                    var dk;
                    var dkUzunluk = value.getMinutes().toString().length;
                    if (dkUzunluk == 1) {
                        dk = "0" + value.getMinutes();
                    }
                    else {
                        dk = value.getMinutes();
                    }
                    var saat;
                    var dkUzunluk = value.getHours().toString().length;
                    if (dkUzunluk == 1) {
                        saat = "0" + value.getHours()
                    }
                    else {
                        saat = value.getHours()
                    }

                    var time = saat + ":" + dk
                    return time.toString();
                }

                $('#btnListDaily').click(function () {
                    $(this).button('loading');
                    DailyChartData();
                });

                function DailyChartData() {
                    var beginDate = $('input[name="beginDaily"]').val();

                    if (!beginDate || beginDate.length == 0) {
                        beginDate = new Date().toISOString();
                    }

                    $.ajax({
                        type: "get",
                        url: "/Home/GetLineChart",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: { beginDate: beginDate, stationId: @Model },
                        success: function (data) {
                            $('#btnListDaily').button('reset');
                            var echartLine = echarts.init(document.getElementById('echart_line'), theme);
                            var _dailyProductionText = $('#hdn_daily_production').val();
                            var _irradiation = $('#hdn_irradiation').val();
                            var _energy = $('#hdn_energy').val();
                            var _ekk = $('#hdn_ekk').val();
                            var _maxsimum = $('#hdn_maximum').val();
                            var gecici_max = 0;
                            var skala1;
                            if (data._acInstalledPower == null) {
                                skala1 = 1700;
                            }
                            else {
                                skala1 = data._acInstalledPower * 1.45;
                            }

                            var skala2;
                            if (data._irradiationScale == null) {
                                skala2 = 1400;
                            }
                            else {
                                skala2 = data._irradiationScale * 1.30;
                            }
                            echartLine.setOption({

                                tooltip: {
                                    trigger: 'axis',
                                    axisPointer: {
                                        animation: true
                                    },
                                    formatter: function (params) {
                                        let ItemsArray = ['kW', 'W/m²', 'MWh', 'kW'];
                                        var tooltipText = "";
                                        var _unit;
                                        tooltipText += params[0].name;
                                        for (var i = 0; i < params.length; i++) {
                                            _unit = ItemsArray[params[i].seriesIndex];
                                            if (params[i].value == 0) {
                                                tooltipText += "<br/>" + '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + params[i].color + '"></span>' + params[i].seriesName + " : " + "-" + " " + _unit;
                                            }
                                            else {
                                                tooltipText += "<br/>" + '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + params[i].color + '"></span>' + params[i].seriesName + " : " + NumberConvert(params[i].value) + " " + _unit;
                                            }
                                        }
                                        return tooltipText;
                                    }
                                },
                                lineStyle: {
                                    normal: {
                                        type: 'solid'
                                    }
                                },
                                legend: {
                                    x: 350,
                                    y: 20,
                                    data: [_dailyProductionText, _irradiation, _energy]
                                },
                                toolbox: {
                                    show: true,
                                    feature: {
                                        mark: { show: false },
                                        dataZoom: { show: false },
                                        dataView: { show: false },
                                        magicType: {
                                            show: true,
                                            title: {
                                                line: 'Line',
                                                bar: 'Bar',
                                                stack: 'Stack',
                                                tiled: 'Tiled'
                                            },
                                            type: ['line', 'bar', 'stack', 'tiled']
                                        },
                                        restore: {
                                            show: true,
                                            title: "Restore"
                                        },
                                        saveAsImage: {
                                            show: true,
                                            title: "Save Image"
                                        }
                                    }
                                },
                                calculable: true,
                                dataZoom: [
                                    {
                                        show: true,
                                        realtime: true,
                                        start: 0,
                                        end: 100
                                    },
                                    {
                                        type: 'inside',
                                        realtime: true,
                                        start: 0,
                                        end: 100
                                    }
                                ],
                                xAxis: [{
                                    type: 'category',
                                    boundaryGap: false,
                                    scale: true,
                                    axisLabel: {
                                        formatter: function (value, index) {

                                            var date = new Date(value);
                                            var time = value.split(':');
                                            return time[0].toString() + ':00             ';

                                        }

                                    },
                                    data: data._ozet.map(function (a) { return DateFormat(a._tarih); })
                                }],
                                yAxis: [
                                    {
                                        type: 'value',
                                        name: _dailyProductionText,
                                        axisLabel: {
                                            formatter: '{value} kW',
                                            textStyle: {
                                                color: '#399428',
                                                fontStyle: 'bold'
                                            }
                                        },
                                        nameTextStyle: {
                                            color: '#399428',
                                            fontStyle: 'bold'
                                        },
                                        beginAtZero: true,
                                        steps: 100,
                                        stepValue: 100,
                                        max: skala1
                                    },
                                    {
                                        type: 'value',
                                        name: _energy,
                                        axisLabel: {
                                            formatter: '{value} MWh',
                                            textStyle: {
                                                color: '#d49b33',
                                                fontStyle: 'bold'
                                            }
                                        },
                                        nameTextStyle: {
                                            color: '#d49b33',
                                            fontStyle: 'bold'
                                        },
                                    },
                                    {
                                        type: 'value',
                                        name: '                                   ' + _irradiation + '',
                                        axisLabel: {
                                            formatter: '             {value} W/m²',
                                            textStyle: {
                                                color: '#4661c3',
                                                fontStyle: 'bold'
                                            }
                                        },
                                        nameTextStyle: {
                                            color: '#4661c3',
                                            fontStyle: 'bold'
                                        },
                                        beginAtZero: true,
                                        steps: 100,
                                        stepValue: 100,
                                        max: skala2
                                    }
                                ],
                                series: [{
                                    name: _dailyProductionText,
                                    type: 'line',
                                    smooth: true,
                                    itemStyle: {
                                        normal: {
                                            areaStyle: {
                                                type: 'default'
                                            }
                                        }
                                    },
                                    data: data._ozet.map(function (a) { return a._gunlukUretim; }),

                                    markPoint: {
                                        symbol: 'pin',
                                        //symbolSize:80,
                                        label: {
                                            normal: {
                                                textStyle: {
                                                    color: '#000',
                                                    fontWeight: 'bold',
                                                    fontSize: 10
                                                }
                                            }
                                        },

                                        data: [{
                                            type: 'max',
                                            name: 'Maximum Production (kW)'
                                        }]
                                    }
                                }, {
                                    name: _irradiation,
                                    type: 'line',
                                    smooth: true,
                                    yAxisIndex: 2,
                                    itemStyle: {
                                        normal: {
                                        }
                                    },
                                    data: data._ozet.map(function (a) { return a._isinim; })
                                }, {
                                    name: _energy,
                                    type: 'line',
                                    yAxisIndex: 1,
                                    smooth: false,
                                    itemStyle: {
                                        normal: {
                                        }
                                    },
                                    data: data._ozet.map(function (a) { return a._enerji; })
                                }, {
                                    name: _maxsimum,
                                    type: 'line',
                                    data: data._ozet.map(function (a) { return a._max; })
                                }]

                            });


                        }

                    });
                }
                //debugger;
                //var echartLine = echarts.init(document.getElementById('echart_line'), theme);
                //echartLine.setOption.yAxis[0].max = 20000;


                //var chart = $("#echart_line").data("kendoChart");
                //chart.setOptions({ yAxis: { max: 200000 } });
                //chart.refresh();
                    //var a = echartLine.getOptions().get('yAxes[0].title');

                    //debugger;
                    //var chart = $('#echart_line').get;
                    //var asd = chart.yAxis[0].getExtremes();
                    //  debugger;
                    //echartLine.getOption.xAxis.;
                    //echartLine.update();
                    //alert(echartLine.getOption.valueAxis);


               //Üretim Grafik bit.

            //Günlük Grafik bas.
                $('#btnList2').button('loading');
                CallDailyChartData();
                $('#btnList2').click(function () {
                    $(this).button('loading');
                    $("#aylikDetay").empty();
                    $("#aylikFooter").empty();
                    CallDailyChartData();
                });

                function CallDailyChartData() {
                    var beginDate2 = $('#selectedMonth').val();
                    if (!beginDate2 || beginDate2.length == 0) {
                        var dt = new Date($.now());
                        beginDate2 = dt.getMonth() + 1;
                        $('[name=selectedMonth]').val(beginDate2);
                    }
                    var beginDate3 = $('#selectedYear').val();


                    $.ajax({
                        type: "Post",
                        url: "/Home/GetDailyProduction",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: "{'beginMonth':'" + beginDate2 + "','beginYear':'" + beginDate3 + "','stationId':'" + @Model + "'}",
                        success: function (data) {

                            var _target = $('#hdn_target').val();
                            var _production = $('#hdn_production').val();

                            $('#btnList2').button('reset');
                            if (data.length != 0) {
                                var next_days = 0;
                                var listAylikToplam = [];
                                var listAyDate = [];
                                var listTarget = [];
                                var listPR = [];

                                var gunSayisi;
                                var b = ConvertNumberMonth(beginDate2);
                                if (data.listPR.length != 0) {
                                    var dayy = getDay(data.listPR[0]._tarih);
                                    gunSayisi = ConvertDateMonth(data.listPR[0]._tarih);
                                }
                                else {
                                    gunSayisi = 30;
                                }
                                var b = ConvertNumberMonth(beginDate2);
                                $.each(data.listPR, function (i, item) {
                                    $("#aylikDetay").append("<tr><td>" + ConvertTicksToDate(item._tarih) + " / " + ConvertTicksToTime(item._tarih) + "</td><td>" + (item._enerji).toFixed(2).replace('.', ',') + " MWh" + "</td><td>" + (item._IrradiationSum).toFixed(2).replace('.', ',') + " Wh" + "</td><td>" + "% " + (item._pr).toFixed(1).replace('.', ',') + "</td></tr>");
                                });
                                $("#aylikFooter").append("<tr><td>@Resources.Total :</td><td>" + data.toplamEnerji.toFixed(2).replace('.', ',') + " MWh" + "</td><td>" + data.toplamIsinim.toFixed(2).replace('.', ',') + " Wh " + "</td><td>" + "% " + data.ortalamaPR.toFixed(1).replace('.', ',') + "</td></tr>");

                                for (var j = 1; j < dayy; j++) {
                                    listAylikToplam.push(0);
                                    listTarget.push(data._target);
                                    listPR.push(0);
                                    listAyDate.push(j);
                                    next_days++;
                                }

                                for (var i = 0; i < data.listPR.length; i++) {
                                    listAylikToplam.push((data.listPR[i]._enerji).toFixed(2));
                                    listAyDate.push(ConvertDay(data.listPR[i]._tarih));
                                    listTarget.push(data._target);
                                    listPR.push(data.listPR[i]._pr.toFixed(1));
                                    next_days++;
                                }
                                var nextEmpty = gunSayisi - next_days;
                                for (var i = 0; i < nextEmpty; i++) {
                                    listAyDate.push(i + next_days + 1);
                                    listAylikToplam.push(0);
                                    listTarget.push(data._target);
                                    listPR.push(0);
                                }
                            }
                            else {
                                var listAylikToplam = [];
                                var listAyDate = [];
                                var listTarget = [];
                                var listPR = [];
                                var gunSayisi;
                                var z = ConvertNumberMonth(beginDate2);

                                for (var i = 0; i < z; i++) {
                                    listAyDate.push(i + 1);
                                    listAylikToplam.push(0);
                                    listTarget.push(0);
                                    listPR.push(0);
                                }
                            }

                            var echartBar = echarts.init(document.getElementById('mainb'), theme);

                            echartBar.setOption({
                                title: {

                                },
                                tooltip: {
                                    trigger: 'axis',
                                    axisPointer: {
                                        animation: true
                                    },
                                    formatter: function (params) {
                                        let ItemsArray = ['MWh', '%', 'MWh'];
                                        var tooltipText = "";
                                        var _unit;
                                    tooltipText += params[0].name;
                                        for (var i = 0; i < params.length; i++) {
                                            _unit = ItemsArray[params[i].seriesIndex];
                                            tooltipText += "<br/>" + '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + params[i].color + '"></span>' + params[i].seriesName + " : " + NumberConvert2(params[i].value) + " " + _unit;
                                    }
                                    return tooltipText;
                                    }
                                },
                                legend: {
                                    data: [_production, 'PR', _target]
                                },
                                toolbox: {
                                    show: true,
                                    feature: {
                                        mark: { show: false },
                                        dataZoom: { show: false },
                                        dataView: { show: false },
                                        magicType: {
                                            show: true,
                                            title: {
                                                line: 'Line',
                                                bar: 'Bar'
                                            },
                                            type: ['line', 'bar']
                                        },
                                        restore: {
                                            show: true,
                                            title: "Restore"
                                        },
                                        saveAsImage: {
                                            show: true,
                                            title: "Save Image"
                                        }
                                    }
                                },
                                calculable: false,
                                xAxis: [{
                                    type: 'category',
                                    data: listAyDate
                                }],
                                yAxis: [{
                                    type: 'value',
                                    name: _production,
                                    axisLabel: {
                                        formatter: '{value} MWh'
                                    }
                                }, {
                                    type: 'value',
                                    name: 'PR',
                                    yAxisIndex: 1,
                                    axisLabel: {
                                        formatter: '{value} %'
                                    }
                                }],
                                series: [{
                                    name: _production,
                                    type: 'bar',
                                    yAxisIndex: 0,
                                    data: listAylikToplam,
                                    markPoint: {
                                        data: [{
                                            type: 'max',
                                            name: 'MAX'
                                        }]

                                    }
                                }, {
                                    name: 'PR',
                                    type: 'bar',
                                    yAxisIndex: 1,
                                    data: listPR
                                }, {
                                    name: _target,
                                    type: 'line',
                                    yAxisIndex: 0,
                                    data: listTarget
                                }]
                            });

                        }
                    });
                }

            //Günlük Grafik bit.

            //Haftalık Grafik bas.
                $('#profile-tab24').click(function () {
                    setTimeout(function () {
                      CallWeeklyChartData();
                    }, 250);
                });

                $('#btnList12').click(function () {
                    CallWeeklyChartData();
                });
                function CallWeeklyChartData() {
                    $("#LoadingImage3").show();
                    $.ajax({
                        type: "Post",
                        url: "/Home/GetWeeklyProduction?stationId=@Model",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            var _monday = $('#hdn_monday').val();
                            var _tuesday = $('#hdn_tuesday').val();
                            var _wednesday = $('#hdn_wednesday').val();
                            var _thursday = $('#hdn_thursday').val();
                            var _friday = $('#hdn_friday').val();
                            var _saturday = $('#hdn_saturday').val();
                            var _sunday = $('#hdn_sunday').val();

                            var _target = $('#hdn_target').val();
                            var _production = $('#hdn_production').val();
                            $("#LoadingImage3").hide();

                            if (data.length != 0) {
                                var listWeekEnerji = [];
                                var listWeekTarget = [];
                                var listWeekDate = [];
                                var listWeekPR = [];

                                for (var i = 0; i < data.listPR.length; i++) {
                                    listWeekEnerji.push((data.listPR[i]._enerji).toFixed(2));
                                    listWeekDate.push(data.listPR[i]._dayName);
                                    listWeekTarget.push(data._target);
                                    listWeekPR.push(data.listPR[i]._pr.toFixed(1));
                                }
                            }
                            else {
                                var listWeekDate = [];
                                var listWeekTarget = [];
                                var listWeekPR = [];

                                for (var i = 0; i < 7; i++) {
                                    listWeekDate.push(i + 1);
                                    listWeekTarget.push(0);
                                    listWeekPR.push(0);
                                }
                            }

                            var echartBar5 = echarts.init(document.getElementById('mainb5'), theme);

                            echartBar5.setOption({
                                title: {

                                },
                                tooltip: {
                                    trigger: 'axis',
                                    axisPointer: {
                                        animation: true
                                    },
                                     formatter: function (params) {
                                         let ItemsArray = ['MWh', '%', 'MWh'];
                                        var tooltipText = "";
                                        var _unit;
                                        tooltipText += params[0].name;
                                        for (var i = 0; i < params.length; i++) {
                                            _unit = ItemsArray[params[i].seriesIndex];
                                            tooltipText += "<br/>" + '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + params[i].color + '"></span>' + params[i].seriesName + " : " + NumberConvert2(params[i].value) + " " + _unit;
                                        }
                                        return tooltipText;
                                    }
                                },
                                legend: {
                                    data: [_production, 'PR', _target]
                                },
                                toolbox: {
                                    show: true,
                                    feature: {
                                        mark: { show: false },
                                        dataZoom: { show: false },
                                        dataView: { show: false },
                                        magicType: {
                                            show: true,
                                            title: {
                                                line: 'Line',
                                                bar: 'Bar'
                                            },
                                            type: ['line', 'bar']
                                        },
                                        restore: {
                                            show: true,
                                            title: "Restore"
                                        },
                                        saveAsImage: {
                                            show: true,
                                            title: "Save Image"
                                        }
                                    }
                                },
                                calculable: false,
                                xAxis: [{
                                    type: 'category',
                                    data: listWeekDate
                                }],
                                yAxis: [{
                                    type: 'value',
                                    name: _production,
                                    axisLabel: {
                                        formatter: '{value} MWh'
                                    }
                                }, {
                                    type: 'value',
                                    name: 'PR',
                                    yAxisIndex: 1,
                                    axisLabel: {
                                        formatter: '{value} %'
                                    }
                                }],
                                series: [{
                                    name: _production,
                                    type: 'bar',
                                    yAxisIndex: 0,
                                    data: listWeekEnerji,
                                    markPoint: {
                                        data: [{
                                            type: 'max',
                                            name: 'MAX'
                                        }]
                                    }
                                }, {
                                    name: 'PR',
                                    type: 'bar',
                                    yAxisIndex: 1,
                                    data: listWeekPR
                                }, {
                                    name: _target,
                                    type: 'line',
                                    yAxisIndex: 0,
                                    data: listWeekTarget
                                }]
                            });

                        }
                    });
                }

            //Haftalık Grafik bit.




            //Aylık Grafik Bas.
                function getMonth(vl) {
                    var value = new Date
                        (
                        parseInt(vl.replace(/(^.*\()|([+-].*$)/g, ''))
                        );
                    var ay = (value.getMonth() + 1);
                    return ay;
                }
                function getDay(vl) {
                    var value = new Date
                        (
                        parseInt(vl.replace(/(^.*\()|([+-].*$)/g, ''))
                    );
                    var gun = (value.getDate());

                    return gun;
                }

                var beginDate4 = $('#selected2Year').val();
                $('#profile-tab21').click(function () {

                    setTimeout(function () {
                        var dty = new Date($.now());
                        nowyear = dty.getFullYear();
                        $('#selected2Year').val(nowyear);
                        CallAnnualyChartData(beginDate4);
                        $('#btnList3').button('loading');
                        $("#yillikDetay").empty();
                        $("#yillikFooter").empty();
                    }, 250);
                });

                $('#btnList3').click(function () {
                    $(this).button('loading');
                    $("#yillikDetay").empty();
                    $("#yillikFooter").empty();
                    var beginDate5 = $('#selected2Year').val();
                    CallAnnualyChartData(beginDate5);
                });

                function CallAnnualyChartData(yil) {
                    $.ajax({
                        url: "/Home/GetMonthlyProduction",
                        type: "POST",
                        dataType: "json",
                        data: { stationId: @Model,slcYear: yil },
                        success: function (data) {

                            var _january = $('#hdn_january').val();
                            var _february = $('#hdn_february').val();
                            var _march = $('#hdn_march').val();
                            var _april = $('#hdn_april').val();
                            var _may = $('#hdn_may').val();
                            var _june = $('#hdn_june').val();
                            var _july = $('#hdn_july').val();
                            var _august = $('#hdn_august').val();
                            var _september = $('#hdn_september').val();
                            var _october = $('#hdn_october').val();
                            var _november = $('#hdn_november').val();
                            var _december = $('#hdn_december').val();
                            var _target = $('#hdn_target').val();
                            var _production = $('#hdn_production').val();
                            $('#btnList3').button('reset');
                            var listAnnualTotal = [];
                            var listAnnualPR = [];

                            var aa = data.listPR[0].month;
                            for (var j = 0; j < aa - 1; j++) {
                                listAnnualTotal.push(0);
                                listAnnualPR.push(0);
                            }
                            for (var i = 0; i < data.listPR.length; i++) {
                                listAnnualTotal.push(data.listPR[i].energy);
                                listAnnualPR.push(data.listPR[i].pr);
                            }

                                if (aa==1) {
                                    for (var k = 0; k < 10 - aa; k++)
                                    {
                                        listAnnualTotal.push(0);
                                        listAnnualPR.push(0);
                                     }
                                           }

                                $.each(data.listPR, function (i, item) {
                                    $("#yillikDetay").append("<tr><td>" + item.month + "</td><td>" + (item.energy).toFixed(2).replace('.', ',') + " MWh" + "</td><td>" + (item.irradiationSum).toFixed(1).replace('.', ',') + " Wh" +"</td><td>" + "% " + (item.pr).toFixed(1).replace('.', ',') + "</td><td>" + (item.target).toFixed(1).replace('.', ',') + " MWh" + "</td></tr>");
                                });
                                $("#yillikFooter").append("<tr><td>@Resources.Total :</td><td>" + data.toplamEnerji.toFixed(2).replace('.', ',') + " MWh" + "</td><td>" + data.toplamIsinim.toFixed(1).replace('.', ',') + " Wh" +"</td><td>" + "% " + data.ortalamaPR.toFixed(1).replace('.', ',') + "</td><td></td></tr>");
                                $("#yillikFooter").append("<tr><td>@Resources.Average :</td><td>" + data.ortalamaEnerji.toFixed(2).replace('.', ',') + " MWh" + "</td><td>" + data.ortalamaIsinim.toFixed(1).replace('.', ',') + " Wh" +"</td><td>" + "% " + data.ortalamaPR.toFixed(1).replace('.', ',') + "</td><td></td></tr>");

                                var echartBar2 = echarts.init(document.getElementById('mainb2'), theme);
                                echartBar2.setOption({
                                    title: {

                                    },
                                    tooltip: {
                                        trigger: 'axis',
                                        axisPointer: {
                                            animation: true
                                        },
                                        formatter: function (params) {
                                            let ItemsArray = ['MWh', '%', 'MWh'];
                                            var tooltipText = "";
                                            var _unit;
                                            tooltipText += params[0].name;
                                            for (var i = 0; i < params.length; i++) {
                                                _unit = ItemsArray[params[i].seriesIndex];
                                                tooltipText += "<br/>" + '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + params[i].color + '"></span>' + params[i].seriesName + " : " + NumberConvert2(params[i].value) + " " + _unit;
                                            }
                                            return tooltipText;
                                        }
                                    },
                                    legend: {
                                        data: [_production, 'PR', _target]
                                    },
                                    toolbox: {
                                        show: false
                                    },
                                    calculable: false,
                                    xAxis: [{
                                        type: 'category',
                                        data: [_january, _february, _march, _april, _may, _june, _july, _august, _september, _october, _november, _december],
                                        axisLabel: {
                                            show: true,
                                            interval: 0,
                                            rotate: 30,
                                            margin: 8,
                                            clickable: false,
                                            formatter: null,
                                            textStyle: {
                                                fontSize: 12,
                                                fontStyle: 'normal',
                                                fontWeight: 'normal',
                                            },
                                        }
                                    }],
                                    yAxis: [{
                                        type: 'value',
                                        name: _production,
                                        axisLabel: {
                                            formatter: '{value} MWh'
                                        }
                                    }, {
                                        type: 'value',
                                        name: 'PR',
                                        axisLabel: {
                                            formatter: '{value} %'
                                        }
                                    }],
                                    series: [{
                                        name: _production,
                                        type: 'bar',
                                        yValueFormatString: "$####.00",
                                        data: listAnnualTotal,
                                        markPoint: {
                                            data: []
                                        },
                                        markLine: {
                                            data: []
                                        }
                                    },
                                    {
                                        name: 'PR',
                                        type: 'bar',
                                        data: listAnnualPR,
                                        yAxisIndex: 1,
                                        markPoint: {
                                            data: []
                                        },
                                        markLine: {
                                            data: []
                                        }
                                        }, {
                                            name: _target,
                                            type: 'line',
                                            yAxisIndex: 0,
                                            data: data.listTarget
                                        }]
                                });

                            }
                        });
                    }

            //Aylık Grafik Bit.

            //Yıllık Grafik Bas.

                $('#profile-tab22').click(function () {
                    setTimeout(function () {
                        CallAnnualChartData();
                    }, 250);
                });

                function CallAnnualChartData() {
                    $.ajax({
                        url: "/Home/GetAnnualProduction",
                        type: "POST",
                        dataType: "json",
                        data: { stationId: @Model},
                        success: function (data) {
                            var _production = $('#hdn_production').val();
                            var listAnnualProduction = [];
                            var listAnnualPR = [];
                            var listAnnualTarget = [];
                            var listYear = [];
                            for (var i = 0; i < data.length; i++) {
                                listAnnualProduction.push(data[i].energy);
                                listAnnualPR.push(data[i].pr);
                                listAnnualTarget.push(0);
                                listYear.push(data[i].year);
                            }
                                var echartBar3 = echarts.init(document.getElementById('mainb3'), theme);
                                echartBar3.setOption({
                                    title: {

                                    },
                                    tooltip: {
                                        trigger: 'axis',
                                        axisPointer: {
                                            animation: true
                                        },
                                        formatter: function (params) {
                                            let ItemsArray = ['MWh', '%', 'MWh'];
                                            var tooltipText = "";
                                            var _unit;
                                            tooltipText += params[0].name;
                                            for (var i = 0; i < params.length; i++) {
                                                _unit = ItemsArray[params[i].seriesIndex];
                                                tooltipText += "<br/>" + '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + params[i].color + '"></span>' + params[i].seriesName + " : " + NumberConvert2(params[i].value) + " " + _unit;
                                            }
                                            return tooltipText;
                                        }
                                    },
                                    legend: {
                                        data: [_production, 'PR']
                                    },
                                    toolbox: {
                                        show: false
                                    },
                                    calculable: false,
                                    xAxis: [{
                                        type: 'category',
                                        data: listYear
                                    }],
                                    yAxis: [{
                                        type: 'value',
                                        name: _production,
                                        axisLabel: {
                                            formatter: '{value} MWh'
                                        }
                                    }, {
                                        type: 'value',
                                        name: 'PR',
                                        axisLabel: {
                                            formatter: '{value} %'
                                        }
                                    }],
                                    series: [{
                                        name: _production,
                                        type: 'bar',
                                        data: listAnnualProduction,
                                        markPoint: {
                                            data: []
                                        },
                                        markLine: {
                                            data: []
                                        }
                                    },
                                    {
                                        name: 'PR',
                                        type: 'bar',
                                        data: listAnnualPR,
                                        yAxisIndex: 1,
                                        markPoint: {
                                            data: []
                                        },
                                        markLine: {
                                            data: []
                                        }
                                        }]
                                });

                            }
                        });
                    }

            //Yıllık Grafik Bit.

                 //Total Grafik Bas.

                $('#profile-tab23').click(function () {
                    setTimeout(function () {
                        CallTotalChartData();
                    }, 250);
                });
                function CallTotalChartData() {
                    $.ajax({
                        url: "/Home/GetTotalProduction",
                        type: "POST",
                        dataType: "json",
                        data: { stationId: @Model},
                        success: function (data) {
                            var _total = $('#hdn_total').val();
                            var _production = $('#hdn_production').val();
                            var listTotalProduction = [];
                            var listTotalPR = [];
                                listTotalProduction.push(data.energy);
                                listTotalPR.push(data.pr);
                                var echartBar4 = echarts.init(document.getElementById('mainb4'), theme);
                                echartBar4.setOption({
                                    title: {
                                    },
                                    tooltip: {
                                        trigger: 'axis',
                                        axisPointer: {
                                            animation: true
                                        },
                                        formatter: function (params) {
                                            let ItemsArray = ['MWh', '%', 'MWh'];
                                            var tooltipText = "";
                                            var _unit;
                                            tooltipText += params[0].name;
                                            for (var i = 0; i < params.length; i++) {
                                                _unit = ItemsArray[params[i].seriesIndex];
                                                tooltipText += "<br/>" + '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + params[i].color + '"></span>' + params[i].seriesName + " : " + NumberConvert2(params[i].value) + " " + _unit;
                                            }
                                            return tooltipText;
                                        }
                                    },
                                    legend: {
                                        data: [_production, 'PR']
                                    },
                                    toolbox: {
                                        show: false
                                    },
                                    calculable: false,
                                    xAxis: [{
                                        type: 'category',
                                        data: [_total]
                                    }],
                                    yAxis: [{
                                        type: 'value',
                                        name: _production,
                                        axisLabel: {
                                            formatter: '{value} MWh'
                                        }
                                    }, {
                                        type: 'value',
                                        name: 'PR',
                                        axisLabel: {
                                            formatter: '{value} %'
                                        }
                                    }],
                                    series: [{
                                        name: _production,
                                        type: 'bar',
                                        data: listTotalProduction,
                                        markPoint: {
                                            data: []
                                        },
                                        markLine: {
                                            data: []
                                        }
                                    },
                                    {
                                        name: 'PR',
                                        type: 'bar',
                                        data: listTotalPR,
                                        yAxisIndex: 1,
                                        markPoint: {
                                            data: []
                                        },
                                        markLine: {
                                            data: []
                                        }
                                        }]
                                });

                            }
                        });
                    }

            //Total Grafik Bit.
                //Hourly Average bas.
                $('#btnHourlyAVG').click(function () {
                    setTimeout(function () {
                        HourlyAverage();
                    }, 250);

                });
                    $('#btnListHourly').click(function () {
                    HourlyAverage();
                    });
                    function HourlyAverage() {

                        var hourlyAvgDate = $('input[name="HourlyAvgDate"]').val();
                        var hourlyAvgDate2 = $('input[name="HourlyAvgDate2"]').val();
                    if (!hourlyAvgDate || hourlyAvgDate.length == 0) {
                        hourlyAvgDate = new Date().toISOString();
                        hourlyAvgDate2 = new Date().toISOString();
                    }

                    $.ajax({
                        url: "/Home/HourlyReport/",
                        type: "Post",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: "{'slctDate':'" + hourlyAvgDate + "','endDate':'" + hourlyAvgDate2 + "','stationId':'" +@Model+ "'}",
                        success: function (data) {
                            debugger;
                            var _irradiation = $('#hdn_irradiation').val();
                            var _production = $('#hdn_production').val();
                            var _production_Hourly = $('#hdn_production_energy').val();
                            var listEnerji = [];
                            var listHour = [];
                            var listIsinim = [];
                            var listuretilen_enerji = [];
                            for (var i = 0; i < data.length; i++) {
                                listEnerji.push(data[i]._enerji);
                                listHour.push(data[i]._saat);
                                listuretilen_enerji.push(data[i]._uretilen_enerji);
                                listIsinim.push(data[i]._isinimToplam);
                            }

                            var echartBar6 = echarts.init(document.getElementById('mainb6'), theme);
                            echartBar6.setOption({
                                title: {
                                },
                                tooltip: {
                                    trigger: 'axis',
                                    axisPointer: {
                                        animation: true
                                    },
                                    formatter: function (params) {
                                        let ItemsArray = ['MWh', '%', 'MWh'];
                                        var tooltipText = "";
                                        var _unit;
                                        tooltipText += params[0].name;

                                        for (var i = 0; i < params.length; i++) {
                                            _unit = ItemsArray[params[i].seriesIndex];
                                            tooltipText += "<br/>" + '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + params[i].color + '"></span>' + params[i].seriesName + " : " + NumberConvert2(params[i].value) + " " + _unit;
                                        }

                                        return tooltipText;

                                    }
                                },
                                legend: {
                                    data: [_production, _production_Hourly,_irradiation]
                                },
                                toolbox: {
                                    show: true,
                                    feature: {
                                        mark: { show: false },
                                        dataZoom: { show: false },
                                        dataView: { show: false },
                                        magicType: {
                                            show: true,
                                            title: {
                                                line: 'Line',
                                                bar: 'Bar'
                                            },
                                            type: ['line', 'bar']
                                        },
                                        restore: {
                                            show: true,
                                            title: "Restore"
                                        },
                                        saveAsImage: {
                                            show: true,
                                            title: "Save Image"
                                        }
                                    }
                                },
                                calculable: false,
                                dataZoom: [
                                    {
                                        show: true,
                                        realtime: true,
                                        start: 0,
                                        end: 100
                                    },
                                    {
                                        type: 'inside',
                                        realtime: true,
                                        start: 0,
                                        end: 100
                                    }
                                ],
                                xAxis: [{
                                    type: 'category',
                                    data: listHour,
                                    axisLabel: {
                                        show: true,
                                        interval: 0,
                                        rotate: 0,
                                        clickable: false,
                                        formatter: null,
                                        textStyle: {
                                            fontSize: 11,
                                            fontStyle: 'normal',
                                            fontWeight: 'normal',
                                        },
                                    }
                                }],
                                yAxis: [
                                //    {
                                //        type: 'value',
                                //        name: _production_Hourly,
                                //        axislabel: {

                                //              formatter: '{value} Mwh'
                                //           // formatter: '{value} Mwh'
                                //        }
                                //    },
                                //    {
                                //    type: 'value',
                                //    name: _production,
                                //    axisLabel: {
                                //        formatter: '{value} Mwh'
                                //    }
                                //}
                                //    ,

                                //    //{
                                //    //    type: 'value',
                                //    //    name: _irradiation,
                                //    //    axisLabel: {
                                //    //        formatter: '{value} W/m²'
                                //    //    }
                                //    //},



                                //    {
                                //        type: 'value',
                                //        name: "                                      "+_irradiation,
                                //        axisLabel: {

                                //            formatter: '          {value} Wh/m²'
                                //        }




                                //        //show: false,
                                //        //,
                                //        //beginAtZero: true,
                                //        //steps: 10,
                                //        //stepValue: 10
                                //    }

                                    {
                                        type: 'value',
                                        name: _production,
                                        axisLabel: {
                                            formatter: '{value} MWh'
                                        },
                                        beginAtZero: true,
                                        steps: 100,
                                        stepValue: 100


                                    },
                                    {
                                        type: 'value',
                                        name: '                                    ' + _irradiation + '          ' + "EKK Ü.E" + '',
                                        axisLabel: {
                                            formatter: '{value} Wh/m²'
                                        }
                                    },

                                    {
                                        type: 'value',
                                        name: '',
                                        axisLabel: {

                                            formatter: '                       {value} MWh'
                                        }
                                        //show: false,
                                        ,
                                        beginAtZero: true,
                                        steps: 100,
                                        stepValue: 100
                                    }

                                ],
                                series: [
                                    {
                                        name: _production,
                                        type: 'bar',
                                        yAxisIndex: 0,
                                        data: listEnerji,
                                        markPoint: {
                                            label: {
                                                normal: {
                                                    textStyle: {

                                                        color: '#000',
                                                        fontWeight: 'bold',
                                                        fontSize: 10
                                                    }
                                                }
                                            },
                                            data: [{
                                                type: 'max',
                                                name: 'MAX'
                                            }, {
                                                type: 'min',
                                                name: 'MIN'
                                            }]
                                        },
                                        markLine: {
                                            data: [{
                                                type: 'average',
                                                name: 'Average'
                                            }]
                                        }
                                    }, {
                                        name: _irradiation,
                                        type: 'line',
                                        yAxisIndex: 1,
                                        data: listIsinim,
                                        markPoint: {
                                            label: {
                                                normal: {
                                                    textStyle: {
                                                        color: '#000',
                                                        fontWeight: 'bold',
                                                        fontSize: 10
                                                    }
                                                }
                                            },
                                            data: [{
                                                type: 'max',
                                                name: 'MAX'
                                            }, {
                                                type: 'min',
                                                name: 'MIN'
                                            }]

                                        },
                                        markLine: {
                                            data: [{
                                                type: 'average',
                                                name: 'Average'
                                            }]
                                        }
                                    },
                                     {
                                        name: _production_Hourly,
                                        type: 'line',
                                        yAxisIndex: 2,
                                         data: listuretilen_enerji,
                                        markPoint: {
                                            label: {
                                                normal: {
                                                    textStyle: {
                                                        color: '#000',
                                                        fontWeight: 'bold',
                                                        fontSize: 10
                                                    }
                                                }
                                            },
                                            data: [{
                                                type: 'max',
                                                name: 'MAX'
                                            }, {
                                                type: 'min',
                                                name: 'MIN'
                                            }]

                                        },
                                        markLine: {
                                            data: [{
                                                type: 'average',
                                                name: 'Average'
                                            }]
                                        }
                                    }
                                ]
                            });
                        }
                    });
                    }

                    //Hourly Average bit.

            //DateTimePicker bas.
                $('#single_cal4').daterangepicker({
                    singleDatePicker: true, locale: {
                        format: 'DD/MM/YYYY'
                    },
                    singleClasses: "picker_4"
                }, function (start, end, label) {
                    console.log(start.toISOString(), end.toISOString(), label);
                });
                $('#single_cal5').daterangepicker({
                    singleDatePicker: true, locale: {
                        format: 'DD/MM/YYYY'
                    },
                    singleClasses: "picker_4"
                }, function (start, end, label) {
                    console.log(start.toISOString(), end.toISOString(), label);
                });
                    $('#single_cal6').daterangepicker({
                        singleDatePicker: true, locale: {
                            format: 'DD/MM/YYYY'
                        },
                        singleClasses: "picker_4"
                    }, function (start, end, label) {
                        console.log(start.toISOString(), end.toISOString(), label);
                    });
                $('#inpHour').daterangepicker({
                    singleDatePicker: true, locale: {
                        format: 'DD/MM/YYYY'
                    },
                    singleClasses: "picker_4"
                }, function (start, end, label) {
                    console.log(start.toISOString(), end.toISOString(), label);

                    });

                $('#inpHour2').daterangepicker({
                    singleDatePicker: true, locale: {
                        format: 'DD/MM/YYYY'
                    },
                    singleClasses: "picker_4"
                }, function (start, end, label) {
                    console.log(start.toISOString(), end.toISOString(), label);
                    });


                $('#inpAkim').daterangepicker({
                    singleDatePicker: true, locale: {
                        format: 'DD/MM/YYYY'
                    },
                    singleClasses: "picker_4"
                }, function (start, end, label) {
                    console.log(start.toISOString(), end.toISOString(), label);
                });

                $('#inpHour').daterangepicker({
                    singleDatePicker: true, locale: {
                        format: 'DD/MM/YYYY'
                    },
                    singleClasses: "picker_4"
                }, function (start, end, label) {
                    console.log(start.toISOString(), end.toISOString(), label);
                });
               //DateTimePicker bit.
                });

                </script>

    }
}
