
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutCompany.cshtml";
}

@using language

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/annotations.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>
<script src="https://code.highcharts.com/modules/full-screen.js"></script>


<script src="https://code.highcharts.com/highcharts-more.js"></script>
<script src="https://code.highcharts.com/modules/solid-gauge.js"></script>

@*<script src="~/Content/highcharts/heatmap/heatmap.js"></script>*@
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/heatmap.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/data.js"></script>
<script src="https://code.highcharts.com/modules/boost-canvas.js"></script>
<script src="https://code.highcharts.com/modules/boost.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>
<script src="https://code.highcharts.com/highcharts-3d.js"></script>

<style>

    .highcharts-credits {
        display: none !important;
    }

    .btn-font {
        color: #fff;
        background-color: #178cff;
        border-color: #57acff;
    }

    .progress-title {
        font-size: 12px;
        font-weight: 700;
        color: #000;
        margin: 0 0 10px;
    }

    .progress-outer {
        border: 0px solid #bebfbf;
        border-radius: 45px;
        margin-bottom: 0px;
        position: relative;
        width: 100px;
        /*float:left;*/
    }

    .progress {
        background: #d0d0d0;
        border-radius: 20px;
        margin: 0;
        height: 13px;
    }

        .progress .progress-bar {
            border-radius: 20px;
            box-shadow: none;
            animation: animate-positive 2s;
        }

        .progress .progress-value {
            font-size: 11px;
            font-weight: 700;
            color: #292929;
            position: absolute;
            top: 0px;
            right: -40px;
        }



    .well {
        min-height: 20px;
        padding: 3px;
        margin-bottom: 20px;
        background-color: #eaeaea;
        border: 0px solid #7dbeff;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
    }

    .wellHeader {
        min-height: 20px;
        padding: 6px;
        margin-bottom: 20px;
        background-color: #eee;
        border: 0px solid #7dbeff;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
    }

    th {
        background-color: #178cff29;
    }

    #map {
        height: 100%;
    }
</style>

<button onClick="backPage()">@Resources.Turn_Back</button>

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">

            <div class="x_content">
                <div class="row">
                    <div class="col-md-8 col-sm-12 col-xs-12">

                        <div id="container" style="height:400px;"> </div>

                    </div>

                    <div class="col-md-4 col-sm-12 col-xs-12">

                        <div id="container2" style="height:400px;"> </div>

                    </div>
                    <div class="well" style="overflow: auto">
                        <div class="col-md-6">
                            <div class="btn-group">
                                <h4 id="bakisTarih"> </h4>
                            </div>
                            <div class="btn-group">
                                <input name="dtpicker1" id="datepicker1" class="form-control has-feedback-left btn-sm" type="date" />
                            </div>
                            <div class="btn-group">
                                <input type="button" class="btn btn-font btn-sm" id="btnShow" value="Show" />
                            </div>
                            <div class="btn-group">
                                <img id="loader1" src="~/images/loaderSpinner.gif" height="35" width="35" />
                            </div>
                        </div>
                    </div>
                </div>

                <div class="clearfix"> </div>

            </div>
        </div>
    </div>


</div>

<div class="row">

    <div class="col-md-6 col-sm-12 col-xs-12">
        <div class="x_panel" style="height:450px">
            <div id="map"></div>
        </div>
    </div>

    <div class="col-md-6 col-sm-12 col-xs-12">
        <div class="x_panel">
            <table class="table table-striped table-bordered">
                <tbody id="DetailTable"></tbody>
            </table>
        </div>
    </div>

</div>



<script>

    function backPage() {

        history.back()

    }
    function DateFormat(value) {

        var year = value.getFullYear();
        var month = (value.getMonth() + 1);
        var day = value.getDate();
        if (month < 10)
            month = "0" + month;
        if (day < 10)
            day = "0" + day;

        //var date = day + "." + month + "." + year;
        var date = year + "-" + month + "-" + day;

        return date;
    }

    $(document).ready(function () {

        var GroupID = 0;
        GroupID = @ViewBag.routerGroupId;

        var CompanyID = 0;
        CompanyID = @ViewBag.routerCompanyId;


        if (GroupID != 0) {
            GroupLiActive(GroupID);
        }

        var dtp1 = $('input[name="dtpicker1"]')[0];

        $('.groupLi').click(function () {
            var grpId = this.id;
            GroupID = grpId;
            $('.groupLi').removeClass("active");
            $('.groupLi').removeClass("current-page");
            GetGroupStations(grpId, 0);
        });

        $('.compLi').click(function () {
            CompanyID= this.id;
            GroupID = 0;
            //$('.groupLi').removeClass("active");
            //$('.groupLi').removeClass("current-page");
            GetGroupStations(0, CompanyID);
        });

        $('#btnShow').click(function () {
            GetGroupStations(GroupID, CompanyID);
            //initMap();
        });

        function GroupLiActive(id) {

            var urlNumber = ("#" + id).toString();
            $(urlNumber).addClass("current-page");
            var li2 = $(urlNumber).parent();
            li2.css("display", "block");
            var li1 = li2.parent();
            li1.addClass("active");
        }

        GetGroupStations(GroupID, CompanyID);

        function GetGroupStations(groupId,companyId) {

            var dtpicker1Val = $('input[name="dtpicker1"]').val();

            if (!dtpicker1Val || dtpicker1Val.length == 0) {
                dtpicker1Val = new Date().toISOString();
                var nowDate = DateFormat(new Date());

                dtp1.value = nowDate;
                dtpicker1Val = nowDate;
            }

            $.ajax({
                type: "GET",
                url: "/DashboardCompany/GetCompProduction",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: { groupId: groupId, date: dtpicker1Val, companyId: companyId },
                success: function (data) {
                    $('#loader1').hide();
                    debugger
                    var StationsName = [];
                    var ProductionList = [];
                    var PRList = [];
                    var PieData = [];
                    var contentString = "";

                    $("#DetailTable").empty();

                    $("#DetailTable").append("<tr>" +
                        "<th>Station Name</th>" +
                        "<th>Energy</th>" +
                        "<th>AC Power</th>" +
                        "<th>PR</th>" +
                        "</tr>");
                    var listLocation2 = [];

                    $.each(data, function (i, item) {
                        StationsName.push(item.StationName);
                        ProductionList.push({ 'key': item.StationId, 'y': item.Production });
                        PRList.push({ 'key': item.StationId, 'y': item.PR });
                        PieData.push([item.StationName, item.Production]);
                        var homeDetailPage;
                        if (item.STATION_TYPE == 2) {
                            homeDetailPage = '/EKK_STATION/Index?stationId=';
                        }
                        else if (item.STATION_TYPE == 3) {
                            homeDetailPage = '/Dashboard/Router?stationId=';
                        }
                        else if (item.STATION_TYPE == 5) {
                            homeDetailPage = '/HES/Index?stationId=';
                        }
                        else {
                            homeDetailPage = '/Dashboard/Router?stationId=';
                        }

                        $("#DetailTable").append("<tr>" +
                            "<td><a id='stationNameCss' href='" + homeDetailPage + "" + item.StationId + "' >" + item.StationName + "</a></td>" +
                            "<td>" + item.Production + " MWh</td>" +
                            "<td>" + item.PowerAC + " W</td>" +
                            "<td>" + item.PR + " %</td>" +
                            "</tr>");

                        var stationImg = item.StationId + ".png";

                         contentString = '<div id="content">' +
                        '<h5 id="firstHeading" class="firstHeading">' + item.StationName + '</h5>' +
                        '<img style="width: 270px; height:150px; display: block;" src="/images/StationImages/' + stationImg + '" />'+
                        '<div id="siteNotice"></div>' +
                        '<div id="bodyContent">' +
                        '<p style="font-size: 100%"><b>@Resources.Production: </b>' + item.Production + ' MWh<br/>' +
                        '<b>PR: </b>' + item.PR + ' % <br/>' +
                        '<a class="btn btn-font btn-xs" href="/Dashboard/Router?stationId=' + item.StationId +
                        '" class="btnDetail">@Resources.Detail</a>' + " " + '</div>';

                        listLocation2.push({ lat: item.Latitude, lng: item.Longitude, content: contentString, connection: true });
                    });

                    initMap(listLocation2);

                    Highcharts.chart('container', {
                        chart: {
                            zoomType: 'xy',
                            renderTo: 'chart_div',
                            type: 'column',
                            options3d: {
                                enabled: true,
                                alpha: 5,
                                beta: -10,
                                depth: 20
                            },
                            style: {
                                fontFamily: 'Arial',
                                color: '#4c4c4c',
                                fontSize: '12px'
                            }
                        },
                        title: {
                            text: ""
                        },
                        subtitle: {
                            text: ""
                        },
                        xAxis: [{
                            categories: StationsName,
                            crosshair: true
                        }],
                        yAxis: [{ // Primary yAxis
                            labels: {
                                format: '%{value}',
                                style: {
                                    //color: Highcharts.getOptions().colors[2]
                                }
                            },
                            title: {
                                text: 'PR',
                                style: {
                                    color: Highcharts.getOptions().colors[2]
                                },
                                align: 'high',
                                offset: 0,
                                rotation: 0,
                                y: -10
                            },
                            min: 0,
                            opposite: true
                        }, { // Secondary yAxis
                            title: {
                                text: 'Production',
                                style: {
                                    color: Highcharts.getOptions().colors[0]
                                },
                                align: 'high',
                                offset: 0,
                                rotation: 0,
                                y: -10
                            },
                            labels: {
                                format: '{value} MWh',
                                style: {
                                    //color: Highcharts.getOptions().colors[0]
                                }
                            },
                            opposite: false
                        }],
                        tooltip: {
                            shared: true
                        },
                        legend: {
                            layout: 'vertical',
                            align: 'left',
                            x: 120,
                            verticalAlign: 'top',
                            y: 100,
                            floating: true,
                            backgroundColor:
                                Highcharts.defaultOptions.legend.backgroundColor || // theme
                                'rgba(255,255,255,0.25)'
                        },

                        series: [{
                            name: 'Production',
                            type: 'column',
                            color: Highcharts.getOptions().colors[2],
                            yAxis: 1,
                            data: ProductionList,
                            tooltip: {
                                valueSuffix: ' MWh'
                            },
                            cursor: 'pointer',
                            events: {
                                click: function (event) {
                                    var stId = event.point.key;
                                    var url = "/Dashboard/Router?stationId=" + stId;
                                    window.location.href = url;
                                }
                            }

                        }, {
                            name: 'pr',
                            type: 'column',
                            color: Highcharts.getOptions().colors[0],
                            data: PRList,
                            tooltip: {
                                valueSuffix: ' %'
                                },
                                cursor: 'pointer',
                                events: {
                                    click: function (event) {debugger
                                        var stId = event.point.key;
                                        var url = "/Dashboard/Router?stationId=" + stId;
                                        window.location.href = url;
                                    }
                                }
                        }]
                    });


                        var chart = {
                            plotBackgroundColor: null,
                            plotBorderWidth: null,
                            plotShadow: false
                        };
                        var title = {
                            text: ''
                        };
                        var tooltip = {
                            pointFormat: 'Energy: <b>{point.y:.1f} MWh</b> <br/> <b> % {point.percentage:.1f} </b>'
                        };
                        var plotOptions = {
                            pie: {
                                allowPointSelect: true,
                                cursor: 'pointer',

                                dataLabels: {
                                    enabled: true,
                                    format: '<span style="color:{point.series.color}"></span> <b> {point.name}: </b> % {point.percentage:.1f} <br/> {point.y:.1f} MWh',
                                    style: {
                                        color: (
                                            Highcharts.theme && Highcharts.theme.contrastTextColor) ||
                                            'black',
                                        fontWeight: 500
                                    }
                                    //distance: '-30%'
                                }
                            }
                        };
                        var series = [{
                            type: 'pie',
                            name: 'Browser share',
                            data: PieData
                        }];

                        // Make monochrome colors and set them as default for all pies
                        Highcharts.getOptions().plotOptions.pie.colors = (function () {
                            var colors = Highcharts.map(Highcharts.getOptions().colors, function (color) {
                                return {
                                    radialGradient: {
                                        cx: 0.5,
                                        cy: 0.3,
                                        r: 0.7
                                    },
                                    stops: [
                                        [0, color],
                                        [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken
                                    ]
                                };
                            })
                            return colors;
                        }());

                        var json = {};
                        json.chart = chart;
                        json.title = title;
                        json.tooltip = tooltip;
                        json.series = series;
                        json.plotOptions = plotOptions;
                        $('#container2').highcharts(json);





                }
            });

            function initMap(stList) {

                var myLatlng = stList;
                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 5.6,
                    mapTypeControl: true,
                    mapTypeControlOptions: { style: google.maps.MapTypeControlStyle.DROPDOWN_MENU },
                    mapTypeId: google.maps.MapTypeId.HYBRID,
                    center: { lat: 39.2, lng: 34.6 }
                });

                for (var i = 0, length = myLatlng.length; i < length; i++) {
                    var data = myLatlng[i],
                        latLng = new google.maps.LatLng(data.lat, data.lng);
                    if (data.connection == true) {
                        var marker = new google.maps.Marker({
                            position: latLng,
                            map: map,
                            icon: '/images/marker_green.png',
                            //animation: google.maps.Animation.DROP,
                            title: 'Click to zoom'
                        });

                    }
                    else {
                        var marker = new google.maps.Marker({
                            position: latLng,
                            map: map,
                            icon: '/images/marker_red.png',
                            animation: google.maps.Animation.DROP,
                            title: 'Click to zoom'
                        });

                    }
                    infoBox(map, marker, data);
                }
            }


            var timer, delay = 300000000;
            timer = setInterval(function () {
                initMap();
            }, delay)

            function infoBox(map, marker, data) {
                var infoWindow = new google.maps.InfoWindow();
                // Attaching a click event to the current marker
                google.maps.event.addListener(marker, "click", function (e) {
                    infoWindow.setContent(data.content);
                    infoWindow.open(map, marker);
                });

                // Creating a closure to retain the correct data
                // Note how I pass the current data in the loop into the closure (marker, data)
                (function (marker, data) {
                    // Attaching a click event to the current marker
                    google.maps.event.addListener(marker, "click", function (e) {
                        infoWindow.setContent(data.content);
                        infoWindow.open(map, marker);
                    });
                })(marker, data);
            }

        }


    });
</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCl_zXhq0Qz4_hKotMC4H64zNo6KGPlDCY">
</script>
